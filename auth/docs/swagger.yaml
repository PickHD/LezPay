basePath: /v1
definitions:
  helper.BaseResponse:
    properties:
      data: {}
      error: {}
      messages:
        type: string
      meta:
        $ref: '#/definitions/helper.Meta'
    type: object
  helper.Meta:
    properties:
      page:
        type: integer
      total_data:
        type: integer
      total_page:
        type: integer
    type: object
  model.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.RegisterRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      pin:
        type: string
      user_type:
        $ref: '#/definitions/model.UserType'
    type: object
  model.UserType:
    enum:
    - customer
    - merchant
    type: string
    x-enum-varnames:
    - Customer
    - Merchant
host: localhost:8084
info:
  contact:
    email: taufikjanuar35@gmail.com
    name: Taufik Januar
  description: LezPay API - Auth Services
  license:
    name: MIT
  title: LezPay API
  version: "1.0"
paths:
  /health-check:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.BaseResponse'
      summary: Checking Health Services
      tags:
      - Health Check
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: login
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.BaseResponse'
      summary: Login customer/merchant
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: register customer/merchant
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.BaseResponse'
      summary: Register customer/merchant
      tags:
      - Auth
  /register/verify:
    get:
      consumes:
      - application/json
      parameters:
      - description: Code Verification
        in: query
        name: code
        required: true
        type: string
      - description: customer|merchant
        in: query
        name: user_type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.BaseResponse'
      summary: Verify Register customer/merchant
      tags:
      - Auth
schemes:
- http
swagger: "2.0"
